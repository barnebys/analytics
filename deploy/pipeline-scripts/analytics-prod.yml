trigger:
  - master
pr: none

variables:
  - name: azure-subscription
    value: "sc-tech-traffic-platform-prod-31-03-2025"
  - name: container-registry
    value: '{"loginServer":"crtrafficplatformbbyprod.azurecr.io", "id" : "/subscriptions/086198db-aa94-4b90-9bf8-aaf3287e9ef6/resourceGroups/rg-traffic-platform-prod/providers/Microsoft.ContainerRegistry/registries/crtrafficplatformbbyprod"}'
  - name: kubernetes-service-endpoint
    value: "aks-traffic-prod-v1.29"

pool:
  vmImage: ubuntu-latest

stages:
  - stage: BuildStage
    jobs:
      - job: Build
        displayName: Build and push image to Azure Container Registry
        steps:
        - task: replacetokens@4
          displayName: Replace tokens in Dockerfile
          inputs:
            rootDirectory: '$(Build.SourcesDirectory)/'
            targetFiles: '$(Build.SourcesDirectory)/docker-compose.prod.yml'
            encoding: 'auto'
            tokenPattern: 'custom'
            tokenPrefix: '__'
            tokenSuffix: '__'
            writeBOM: true
            actionOnMissing: 'fail'
            keepToken: false
            actionOnNoFiles: 'fail'
            enableTransforms: false
            useLegacyPattern: false
            enableTelemetry: true
       
        - task: DockerCompose@0
          inputs:
            containerregistrytype: 'Azure Container Registry'
            azureSubscription: $(azure-subscription)
            azureContainerRegistry: $(container-registry)
            dockerComposeFile: '$(Build.SourcesDirectory)/docker-compose.prod.yml'
            projectName: 'bbys-analytics-service'
            action: 'Build services'

        - task: DockerCompose@0
          inputs:
            containerregistrytype: 'Azure Container Registry'
            azureSubscription: $(azure-subscription)
            azureContainerRegistry: $(container-registry)
            dockerComposeFile: '$(Build.SourcesDirectory)/docker-compose.prod.yml'
            projectName: 'bbys-analytics-service'
            action: 'Push services'

        - task: CopyFiles@2
          displayName: Copy deploy files to build artifact
          inputs:
            Contents: '$(Build.SourcesDirectory)/deploy/deploy-scripts/*.yml'
            TargetFolder: '$(build.artifactstagingdirectory)'

        - task: PublishBuildArtifacts@1
          displayName: Publish build artifact to deploy pipeline
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'

  - stage: DeployStage
    dependsOn: BuildStage
    jobs:
      - job: waitForValidation
        displayName: Wait for external validation
        pool: server
        timeoutInMinutes: 5 # job times out in 3 days
        steps:
          - task: ManualValidation@0
            timeoutInMinutes: 5
            inputs:
              notifyUsers: |
                matteo.cinti@barnebys.com
                nikhil.unni@barnebys.com
                sony.sebastian@barnebys.com
              instructions: "Please validate the deployment to production of this build"
              onTimeout: "fail"
      - job: Deploy
        dependsOn: "waitForValidation"
        variables:
          GIT_COMMIT: $[ stageDependencies.BuildStage.Build.outputs['ProduceVar.GIT_COMMIT'] ]
        steps:
          - task: replacetokens@4
            displayName: Replace tokens in deploy files
            inputs:
              rootDirectory: '$(Build.SourcesDirectory)/'
              targetFiles: '$(Build.SourcesDirectory)/deploy/deploy-scripts/*.yml'
              encoding: 'auto'
              tokenPattern: 'custom'
              tokenPrefix: '__'
              tokenSuffix: '__'
              writeBOM: true
              actionOnMissing: 'fail'
              keepToken: false
              actionOnNoFiles: 'fail'
              enableTransforms: false
              useLegacyPattern: false
              enableTelemetry: true

          - task: Kubernetes@1
            inputs:
              connectionType: "Kubernetes Service Connection"
              kubernetesServiceEndpoint: $(kubernetes-service-endpoint)
              command: "apply"
              useConfigurationFile: true
              configuration: "$(Build.SourcesDirectory)/deploy/deploy-scripts/analytics-prod.yml"
              secretType: "dockerRegistry"
              containerRegistryType: "Azure Container Registry"
              checkLatest: true